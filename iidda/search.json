[{"path":"https://canmod.github.io/iidda-tools/iidda/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://canmod.github.io/iidda-tools/iidda/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://canmod.github.io/iidda-tools/iidda/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Steve Walker. Author, maintainer. Samara Manzin. Author. Michael Roswell. Author. Gabrielle MacKinnon. Author. Ronald Jin. Author.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Steve Walker, Samara Manzin, Michael Roswell, Gabrielle MacKinnon, Ronald Jin (2025). iidda: Processing Infectious Disease Datasets IIDDA.. R package version 2.0.0.","code":"@Manual{,   title = {iidda: Processing Infectious Disease Datasets in IIDDA.},   author = {{Steve Walker} and {Samara Manzin} and {Michael Roswell} and {Gabrielle MacKinnon} and {Ronald Jin}},   year = {2025},   note = {R package version 2.0.0}, }"},{"path":"https://canmod.github.io/iidda-tools/iidda/index.html","id":"iidda-r-package","dir":"","previous_headings":"","what":"IIDDA R Package","title":"Processing Infectious Disease Datasets in IIDDA.","text":"iidda package contains functions preparation iidda datasets also iidda.api package, stable probably interested .","code":""},{"path":[]},{"path":"https://canmod.github.io/iidda-tools/iidda/index.html","id":"stable-version","dir":"","previous_headings":"Installation","what":"Stable Version","title":"Processing Infectious Disease Datasets in IIDDA.","text":"","code":"install.packages('iidda', repos = c('https://canmod.r-universe.dev', 'https://cran.r-project.org'))"},{"path":"https://canmod.github.io/iidda-tools/iidda/index.html","id":"development-version","dir":"","previous_headings":"Installation","what":"Development Version","title":"Processing Infectious Disease Datasets in IIDDA.","text":"","code":"remotes::install_github('canmod/iidda-tools', subdir = 'R/iidda')"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/MissingHandlers.html","id":null,"dir":"Reference","previous_headings":"","what":"Missing Handlers — MissingHandlers","title":"Missing Handlers — MissingHandlers","text":"Construct object functions handling missing values.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/MissingHandlers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Missing Handlers — MissingHandlers","text":"","code":"MissingHandlers(   unclear = c(\"Unclear\", \"unclear\", \"uncleaar\", \"uncelar\", \"r\"),   not_reported = c(\"\", \"Not available\", \"*\", \"Not reportable\", \"missing\"),   zeros = \"-\" )"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/MissingHandlers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Missing Handlers — MissingHandlers","text":"unclear Character vector giving values corresponding numbers unclear data enterers. not_reported Character vector giving values corresponding numbers reported original source. zeros Character vector giving values corresponding `0` entered another character resemble original source.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/MissingHandlers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Missing Handlers — MissingHandlers","text":"environment functions handling missing values.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/add_basal_disease.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Basal Disease — add_basal_disease","title":"Add Basal Disease — add_basal_disease","text":"Add column `basal_disease` tidy dataset","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/add_basal_disease.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Basal Disease — add_basal_disease","text":"","code":"add_basal_disease(data, lookup)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/add_basal_disease.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Basal Disease — add_basal_disease","text":"data tidy data set `disease` column. lookup lookup table `disease` `nesting_disease` columns describe global disease hierarchy applied find basal disease `disease` data.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/add_basal_disease.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Basal Disease — add_basal_disease","text":"tidy dataset basal disease","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/add_column_summaries.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Column Summaries — add_column_summaries","title":"Add Column Summaries — add_column_summaries","text":"Add lists unique values ranges values metadata IIDDA data set.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/add_column_summaries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Column Summaries — add_column_summaries","text":"","code":"add_column_summaries(tidy_data, dataset_name, metadata)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/add_column_summaries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Column Summaries — add_column_summaries","text":"tidy_data Data frame prepared data ready packaged IIDDA tidy data set. dataset_name Character string giving IIDDA identifier dataset. metadata Output get_tracking_metadata.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/add_filter_group_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Filter Group Values — add_filter_group_values","title":"Add Filter Group Values — add_filter_group_values","text":"Add lists unique sets values given filter group","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/add_filter_group_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Filter Group Values — add_filter_group_values","text":"","code":"add_filter_group_values(tidy_data, dataset_name, metadata)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/add_filter_group_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Filter Group Values — add_filter_group_values","text":"tidy_data Data frame prepared data ready packaged IIDDA tidy data set. dataset_name Character string giving IIDDA identifier dataset. metadata Output get_tracking_metadata.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/add_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Metadata — add_metadata","title":"Add Metadata — add_metadata","text":"Add title description metadata table columns.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/add_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Metadata — add_metadata","text":"","code":"add_metadata(table, table_metadata, column_metadata)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/add_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Metadata — add_metadata","text":"table dataframe (dataframe-like object) table_metadata named list (list-like object) table_metadata$Title table_metadata$Description strings containing title description table column_metadata dataframe rownames equal columns table, Title Description columns giving title description column table","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/add_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Metadata — add_metadata","text":"version table added metadata attributes","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/add_provenance.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Provenance — add_provenance","title":"Add Provenance — add_provenance","text":"Add provenance information IIDDA dataset, creating columns containing scan digitization IDs associated record.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/add_provenance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Provenance — add_provenance","text":"","code":"add_provenance(tidy_data, tidy_dataset)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/add_provenance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Provenance — add_provenance","text":"tidy_data Data frame IIDDA tidy form. tidy_dataset IIDDA identifier associated dataset `tidy_data` serves intermediate object creation.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/all_prep_script_outcomes.html","id":null,"dir":"Reference","previous_headings":"","what":"Prep Script Outcomes — all_prep_script_outcomes","title":"Prep Script Outcomes — all_prep_script_outcomes","text":"Prep Script Outcomes","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/all_prep_script_outcomes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prep Script Outcomes — all_prep_script_outcomes","text":"","code":"all_prep_script_outcomes()  successful_prep_script_outcomes()  failed_prep_script_outcomes()  error_tar(tar_name)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/all_prep_script_outcomes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prep Script Outcomes — all_prep_script_outcomes","text":"tar_name Name tar archive created log files failed prep script outcomes.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/all_prep_script_outcomes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prep Script Outcomes — all_prep_script_outcomes","text":"Data frame prep script outcomes project.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/all_prep_script_outcomes.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Prep Script Outcomes — all_prep_script_outcomes","text":"successful_prep_script_outcomes(): Data frame successful prep script outcomes failed_prep_script_outcomes(): Data frame failed prep script outcomes error_tar(): Tar archive log files failed prep script outcomes.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/basal_disease.html","id":null,"dir":"Reference","previous_headings":"","what":"Basal Disease — basal_disease","title":"Basal Disease — basal_disease","text":"Basal Disease","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/basal_disease.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Basal Disease — basal_disease","text":"","code":"basal_disease(disease, disease_lookup, encountered_diseases = character())"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/basal_disease.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Basal Disease — basal_disease","text":"disease Disease determine basal disease disease_lookup Table two columns – disease nesting_disease encountered_diseases Character vector diseases already found. Typically left default value empty character vector.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/basal_disease.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Basal Disease — basal_disease","text":"root disease input disease maps disease_lookup.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/blob_to_raw.html","id":null,"dir":"Reference","previous_headings":"","what":"Blob to Raw — blob_to_raw","title":"Blob to Raw — blob_to_raw","text":"Convert URL GitHub blob storage format GitHub raw data format.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/blob_to_raw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Blob to Raw — blob_to_raw","text":"","code":"blob_to_raw(urls)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/blob_to_raw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Blob to Raw — blob_to_raw","text":"urls Character vector GitHub URLs blob storage","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/blob_to_raw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Blob to Raw — blob_to_raw","text":"","code":"blob_to_raw(\"https://github.com/canmod/iidda-tools/blob/main/R/iidda/R/github_parsing.R\") #> [1] \"https://raw.githubusercontent.com/canmod/iidda-tools/main/R/iidda/R/github_parsing.R\""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/cell_block.html","id":null,"dir":"Reference","previous_headings":"","what":"Cell Block — cell_block","title":"Cell Block — cell_block","text":"Create data frame representing rectangular range cells Excel file. useful adding blank cells get read `xlsx_cells`.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/cell_block.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cell Block — cell_block","text":"","code":"cell_block(cells_data)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/cell_block.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cell Block — cell_block","text":"cells_data Data read using `xlsx_cells`, just data frame integer columns `row` `col`.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/check_metadata_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Error if columns in the tidy data are not in metadata Schema and if all values in a column are NA — check_metadata_cols","title":"Error if columns in the tidy data are not in metadata Schema and if all values in a column are NA — check_metadata_cols","text":"Error columns tidy data metadata Schema values column NA","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/check_metadata_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Error if columns in the tidy data are not in metadata Schema and if all values in a column are NA — check_metadata_cols","text":"","code":"check_metadata_cols(tidy_data, metadata)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/check_metadata_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Error if columns in the tidy data are not in metadata Schema and if all values in a column are NA — check_metadata_cols","text":"tidy_data data.frame resulting data prep scripts metadata Nested named list describing metadata tidy data","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/check_tidy_data_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Error if columns in the metadata Schema are not in tidy data — check_tidy_data_cols","title":"Error if columns in the metadata Schema are not in tidy data — check_tidy_data_cols","text":"Error columns metadata Schema tidy data","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/check_tidy_data_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Error if columns in the metadata Schema are not in tidy data — check_tidy_data_cols","text":"","code":"check_tidy_data_cols(table, column_metadata)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/check_tidy_data_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Error if columns in the metadata Schema are not in tidy data — check_tidy_data_cols","text":"table dataframe (dataframe-like object) column_metadata dataframe rownames equal columns table, Title Description columns giving title description column table","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/collapse_xlsx_value_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Collapse xlsx Value Columns — collapse_xlsx_value_columns","title":"Collapse xlsx Value Columns — collapse_xlsx_value_columns","text":"Collapse value columns single character column data frames one row per cell xlsx file.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/collapse_xlsx_value_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collapse xlsx Value Columns — collapse_xlsx_value_columns","text":"","code":"collapse_xlsx_value_columns(data)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/collapse_xlsx_value_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collapse xlsx Value Columns — collapse_xlsx_value_columns","text":"data Data frame representing xlsx file.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/combine_weeks.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine Weeks — combine_weeks","title":"Combine Weeks — combine_weeks","text":"Combine data different Excel sheets associated specific weeks 1956-2000 Canadian communicable disease incidence data prep pipelines.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/combine_weeks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine Weeks — combine_weeks","text":"","code":"combine_weeks(cleaned_sheets, sheet_dates, metadata)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/combine_weeks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine Weeks — combine_weeks","text":"cleaned_sheets List data frames – one sheet sheet_dates Data frame describing sheet dates (TODO: info needed) metadata Output get_tracking_metadata.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/convert_harmonized_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Harmonized Metadata — convert_harmonized_metadata","title":"Convert Harmonized Metadata — convert_harmonized_metadata","text":"Get metadata harmonized data source, given metadata corresponding tidy data source metadata initial harmonized data source metadata.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/convert_harmonized_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Harmonized Metadata — convert_harmonized_metadata","text":"","code":"convert_harmonized_metadata(   tidy_metadata,   harmonized_metadata,   tidy_source,   harmonized_dataset_id,   tidy_source_metadata_path )"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/convert_harmonized_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Harmonized Metadata — convert_harmonized_metadata","text":"tidy_metadata Metadata read_tracking_tables tidy data source. harmonized_metadata Initial metadata read_tracking_tables harmonized data source. tidy_source IIDDA data source ID data source harmonized. harmonized_dataset_id ID dataset harmonized. tidy_source_metadata_path Output convert_metadata_path.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/convert_metadata_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Metadata Path — convert_metadata_path","title":"Convert Metadata Path — convert_metadata_path","text":"Convert metadata path one corresponding tidy data harmonized.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/convert_metadata_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Metadata Path — convert_metadata_path","text":"","code":"convert_metadata_path(metadata_path, harmonized_source, tidy_source)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/convert_metadata_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Metadata Path — convert_metadata_path","text":"metadata_path Path collection tracking tables. harmonized_source IIDDA data source ID harmonized source. tidy_source IIDDA data source ID data source harmonized.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/cp_git_version.html","id":null,"dir":"Reference","previous_headings":"","what":"Copy old git File Version — cp_git_version","title":"Copy old git File Version — cp_git_version","text":"Create temporary file containing copy file git version control particular revision file.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/cp_git_version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copy old git File Version — cp_git_version","text":"","code":"cp_git_version(file, version_hash)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/cp_git_version.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copy old git File Version — cp_git_version","text":"file Path file. version_hash Git version hash.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/cp_git_version.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copy old git File Version — cp_git_version","text":"Temporary file path containing copy.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/cp_git_version.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Copy old git File Version — cp_git_version","text":"can command line using following construction: “` git commit-id:file-path > temp-file-path “`","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/csv_to_json_files.html","id":null,"dir":"Reference","previous_headings":"","what":"CSV to JSON Files — csv_to_json_files","title":"CSV to JSON Files — csv_to_json_files","text":"Create directory JSON files CSV file.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/csv_to_json_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CSV to JSON Files — csv_to_json_files","text":"","code":"csv_to_json_files(csv_path, json_dir, name_field, use_extension = FALSE)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/csv_to_json_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CSV to JSON Files — csv_to_json_files","text":"csv_path Path CSV file. json_dir Path directory saving JSON files. name_field Name field CSV file contains names JSON file. values field must unique. use_extension column CSV file called `extension`, used produced json filenames form `value--name-field.value--extension-field.json`?","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/data_to_json_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Data to JSON Files — data_to_json_files","title":"Data to JSON Files — data_to_json_files","text":"Create directory JSON files data frame.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/data_to_json_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data to JSON Files — data_to_json_files","text":"","code":"data_to_json_files(data, json_dir, name_field, use_extension = FALSE)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/data_to_json_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data to JSON Files — data_to_json_files","text":"data Data frame json_dir Path directory saving JSON files. name_field Name field CSV file contains names JSON file. values field must unique. use_extension column CSV file called `extension`, used produced json filenames form `value--name-field.value--extension-field.json`?","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/disease_coverage_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a heatmap that shows disease coverage over the years — disease_coverage_heatmap","title":"Creates a heatmap that shows disease coverage over the years — disease_coverage_heatmap","text":"Values TRUE particular disease occurred least period ended particular year, FALSE otherwise.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/disease_coverage_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a heatmap that shows disease coverage over the years — disease_coverage_heatmap","text":"","code":"disease_coverage_heatmap(table, disease_col = \"disease\")"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/disease_coverage_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a heatmap that shows disease coverage over the years — disease_coverage_heatmap","text":"table dataframe (dataframe-like object). Tidy dataset compiled datasets disease_col specifies level disease (.e. disease_family, disease, disease_subclass)","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/do_time_scale_cross_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Time Scale Cross Check — do_time_scale_cross_check","title":"Time Scale Cross Check — do_time_scale_cross_check","text":"Function used produce time-scale cross-check CANMOD digitization project.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/do_time_scale_cross_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Time Scale Cross Check — do_time_scale_cross_check","text":"","code":"do_time_scale_cross_check(sum_of_timescales)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/do_time_scale_cross_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Time Scale Cross Check — do_time_scale_cross_check","text":"sum_of_timescales Dataframe aggregations different time scales (TODO: describe)","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/drop_empty_rows.html","id":null,"dir":"Reference","previous_headings":"","what":"Drop Empty Rows — drop_empty_rows","title":"Drop Empty Rows — drop_empty_rows","text":"Drop empty rows table using is_empty.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/drop_empty_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drop Empty Rows — drop_empty_rows","text":"","code":"drop_empty_rows(table)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/drop_empty_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drop Empty Rows — drop_empty_rows","text":"table data frame","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/empty_column_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Empty Column Report — empty_column_report","title":"Empty Column Report — empty_column_report","text":"Save records dataset contain empty values `columns`. report saved `supporting-output/dataset_id` directory.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/empty_column_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Empty Column Report — empty_column_report","text":"","code":"empty_column_report(data, columns, dataset_id)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/empty_column_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Empty Column Report — empty_column_report","text":"data Data frame. columns Character vector columns giving columns check emptiness. dataset_id ID dataset data become, likely processing.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/empty_is_blank.html","id":null,"dir":"Reference","previous_headings":"","what":"Empty is Blank — empty_is_blank","title":"Empty is Blank — empty_is_blank","text":"Force empty strings blank. See is_empty.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/empty_is_blank.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Empty is Blank — empty_is_blank","text":"","code":"empty_is_blank(x)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/empty_is_blank.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Empty is Blank — empty_is_blank","text":"x object test","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/empty_to_na.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert all missing values to NA — empty_to_na","title":"Convert all missing values to NA — empty_to_na","text":"Convert missing values NA","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/empty_to_na.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert all missing values to NA — empty_to_na","text":"","code":"empty_to_na(data)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/empty_to_na.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert all missing values to NA — empty_to_na","text":"data data frame resulting data prep scripts","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/epiweek_end_date.html","id":null,"dir":"Reference","previous_headings":"","what":"End-Dates of Epiweeks — epiweek_end_date","title":"End-Dates of Epiweeks — epiweek_end_date","text":"End-Dates Epiweeks","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/epiweek_end_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"End-Dates of Epiweeks — epiweek_end_date","text":"","code":"epiweek_end_date(year, week)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/epiweek_end_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"End-Dates of Epiweeks — epiweek_end_date","text":"year Integer vector years. week Integer vector weeks.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/epiweek_end_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"End-Dates of Epiweeks — epiweek_end_date","text":"Date vector end-dates specified epiweek.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/extract_between_paren.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Substring Between Parentheses — extract_between_paren","title":"Extract Substring Between Parentheses — extract_between_paren","text":"Note unless specify appropriate contents_pattern extract_between_paren work probably expect multiple sets parentheses. can use exclusion patterns make work better (e.g. content_pattern = '[^)]*').","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/extract_between_paren.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Substring Between Parentheses — extract_between_paren","text":"","code":"extract_between_paren(   x,   left = \"\\\\(\",   right = \"\\\\)\",   contents_pattern = \".*\" )  extract_all_between_paren(   x,   left = \"\\\\(\",   right = \"\\\\)\",   contents_pattern = \".*\",   max_iters = 100 )"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/extract_between_paren.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Substring Between Parentheses — extract_between_paren","text":"x Character vector left Left parenthetical string right Right parenthetical string contents_pattern Regex pattern contents parentheses max_iters maximum number items return","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/extract_between_paren.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Substring Between Parentheses — extract_between_paren","text":"Character vector NA's elements x parentheses substring first matching parentheses.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/extract_between_paren.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Substring Between Parentheses — extract_between_paren","text":"","code":"x = c(\"-\", \"\", NA, \"1\", \"3\", \"1 (Alta.)\", \"(Sask) 20\") extract_between_paren(x) #> [1] NA      NA      NA      NA      NA      \"Alta.\" \"Sask\""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/extract_char_or_blank.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Character or Blank — extract_char_or_blank","title":"Extract Character or Blank — extract_char_or_blank","text":"Extract character vector list return blank string exist proper list passed.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/extract_char_or_blank.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Character or Blank — extract_char_or_blank","text":"","code":"extract_char_or_blank(l, e)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/extract_char_or_blank.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Character or Blank — extract_char_or_blank","text":"l List e Name focal element","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/extract_or_blank.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract or Blank — extract_or_blank","title":"Extract or Blank — extract_or_blank","text":"Try extract list element, return blank list exist proper list passed.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/extract_or_blank.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract or Blank — extract_or_blank","text":"","code":"extract_or_blank(l, e)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/extract_or_blank.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract or Blank — extract_or_blank","text":"l List e Name focal element","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/fill_and_wrap.html","id":null,"dir":"Reference","previous_headings":"","what":"Fill Template and Wrap the Results — fill_and_wrap","title":"Fill Template and Wrap the Results — fill_and_wrap","text":"Convenience function fill_re_template wrap_age_patterns one step.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/fill_and_wrap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fill Template and Wrap the Results — fill_and_wrap","text":"","code":"fill_and_wrap(re_templates, which_bound, purpose, prefix = \"\")"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/fill_and_wrap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fill Template and Wrap the Results — fill_and_wrap","text":"re_templates set re_templates passed fill_re_template which_bound resolve template match lower upper bounds, neither (default), single purpose character string indicating purpose resulting regular expression prefix pattern match beginning string marks beginning age information","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/fill_re_template.html","id":null,"dir":"Reference","previous_headings":"","what":"Fill Regex Template — fill_re_template","title":"Fill Regex Template — fill_re_template","text":"Resolve length-1 character vector containing regex template regular expression matching age bound information disease category names","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/fill_re_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fill Regex Template — fill_re_template","text":"","code":"fill_re_template(re_template, which_bound = \"neither\")"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/fill_re_template.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fill Regex Template — fill_re_template","text":"re_template template resolve regular expressions matching age information contained category names which_bound resolve template match lower upper bounds, neither (default), single","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/fix_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Fix CSV — fix_csv","title":"Fix CSV — fix_csv","text":"Fix format CSV file IIDDA format.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/fix_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fix CSV — fix_csv","text":"","code":"fix_csv(filename)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/fix_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fix CSV — fix_csv","text":"filename Path CSV file","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/fix_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fix CSV — fix_csv","text":"Logical value `TRUE` CSV needed fixing `FALSE` otherwise.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/freq_to_by.html","id":null,"dir":"Reference","previous_headings":"","what":"Frequency to By — freq_to_by","title":"Frequency to By — freq_to_by","text":"Convert words describing frequencies phrases.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/freq_to_by.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Frequency to By — freq_to_by","text":"","code":"freq_to_by(freq)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/freq_to_by.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Frequency to By — freq_to_by","text":"freq one `\"weekly\"` (becomes `\"7 days\"`), `\"4-weekly\"` (becomes `\"28 days\"`), `\"monthly\"` (becomes `\"1 month\"`)","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/freq_to_days.html","id":null,"dir":"Reference","previous_headings":"","what":"Frequency to Days — freq_to_days","title":"Frequency to Days — freq_to_days","text":"Convert words describing frequencies corresponding numbers days","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/freq_to_days.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Frequency to Days — freq_to_days","text":"","code":"freq_to_days(freq)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/freq_to_days.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Frequency to Days — freq_to_days","text":"freq one `\"weekly\"` (becomes `7`), `\"4-weekly\"` (becomes `28`), `\"monthly\"` (returns error)","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/get_all_dependencies.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all Dependencies — get_all_dependencies","title":"Get all Dependencies — get_all_dependencies","text":"Get Dependencies","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/get_all_dependencies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all Dependencies — get_all_dependencies","text":"","code":"get_all_dependencies(source, dataset)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/get_all_dependencies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all Dependencies — get_all_dependencies","text":"source Source ID. dataset dataset ID.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/get_canmod_digitization_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Get CANMOD Digitization Metadata — get_canmod_digitization_metadata","title":"Get CANMOD Digitization Metadata — get_canmod_digitization_metadata","text":"Superseded functionality `iidda.api`.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/get_canmod_digitization_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get CANMOD Digitization Metadata — get_canmod_digitization_metadata","text":"","code":"get_canmod_digitization_metadata(tracking_list)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/get_canmod_digitization_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get CANMOD Digitization Metadata — get_canmod_digitization_metadata","text":"tracking_list output read_tracking_tables","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/get_dataset_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Dataset Metadata — get_dataset_metadata","title":"Get Dataset Metadata — get_dataset_metadata","text":"Get object metadata information particular dataset tracking tables.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/get_dataset_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Dataset Metadata — get_dataset_metadata","text":"","code":"get_dataset_metadata(dataset)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/get_dataset_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Dataset Metadata — get_dataset_metadata","text":"dataset Dataset identifier.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/get_dataset_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Dataset path — get_dataset_path","title":"Get Dataset path — get_dataset_path","text":"Get Dataset path","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/get_dataset_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Dataset path — get_dataset_path","text":"","code":"get_dataset_path(source, dataset, ext = \"csv\")"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/get_dataset_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Dataset path — get_dataset_path","text":"source Source ID. dataset dataset ID. ext Dataset file extension.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/get_elements.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Elements — get_elements","title":"Get Elements — get_elements","text":"Synonym `[` operator use pipelines.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/get_elements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Elements — get_elements","text":"","code":"get_elements()"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/get_firsts.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Firsts — get_firsts","title":"Get Firsts — get_firsts","text":"Get first item sublist sublists (ugh ... know).","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/get_firsts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Firsts — get_firsts","text":"","code":"get_firsts(l, key)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/get_firsts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Firsts — get_firsts","text":"l list lists lists key Name focal sublist (TODO: needs better description/motivation)","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/get_firsts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Firsts — get_firsts","text":"","code":"l = list(   a = list(     A = list(       i = 1,       ii = 2     ),     B = list(       i = 3,       ii = 4     )  ),  b = list(     A = list(       i = 5,       ii = 6     ),     B = list(       i = 7,       ii = 8     )   ) ) get_firsts(l, \"A\") #> $a #> [1] 1 #>  #> $b #> [1] 5 #>  get_firsts(l, \"B\") #> $a #> [1] 3 #>  #> $b #> [1] 7 #>"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/get_items.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Items — get_items","title":"Get Items — get_items","text":"Get list items within inner list list lists","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/get_items.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Items — get_items","text":"","code":"get_items(l, keys)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/get_items.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Items — get_items","text":"l list lists. keys Name items inner lists.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/get_lookup_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Lookup Table — get_lookup_table","title":"Get Lookup Table — get_lookup_table","text":"Get Lookup Table","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/get_lookup_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Lookup Table — get_lookup_table","text":"","code":"get_lookup_table(table_name = c(\"location_iso\"))"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/get_lookup_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Lookup Table — get_lookup_table","text":"table_name Name lookup table","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/get_main_script.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Main Script — get_main_script","title":"Get Main Script — get_main_script","text":"Get Main Script","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/get_main_script.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Main Script — get_main_script","text":"","code":"get_main_script(source, dataset)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/get_main_script.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Main Script — get_main_script","text":"source Source ID. dataset dataset ID.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/get_source_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Source Path — get_source_path","title":"Get Source Path — get_source_path","text":"Get Source Path","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/get_source_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Source Path — get_source_path","text":"","code":"get_source_path(source)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/get_source_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Source Path — get_source_path","text":"source Source ID.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/get_tracking_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Tracking Metadata — get_tracking_metadata","title":"Read Tracking Metadata — get_tracking_metadata","text":"Read CSV files contain single-source--truth metadata used data prep script.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/get_tracking_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Tracking Metadata — get_tracking_metadata","text":"","code":"get_tracking_metadata(   tidy_dataset,   digitization,   tracking_path,   original_format = TRUE,   for_lbom = FALSE )"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/get_tracking_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Tracking Metadata — get_tracking_metadata","text":"tidy_dataset key tidy dataset produced script digitization key digitization used script tracking_path string giving path tracking data original_format original tracking table format used? for_lbom data read LBoM repo?","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/get_tracking_metadata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read Tracking Metadata — get_tracking_metadata","text":"function currently assumes single tidy dataset produced single digitized file.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/get_unique_col_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Unique Column Values — get_unique_col_values","title":"Unique Column Values — get_unique_col_values","text":"Unique Column Values","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/get_unique_col_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unique Column Values — get_unique_col_values","text":"","code":"get_unique_col_values(l)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/get_unique_col_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unique Column Values — get_unique_col_values","text":"l list data frames column names","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/get_unique_col_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unique Column Values — get_unique_col_values","text":"list unique values column","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/get_with_key.html","id":null,"dir":"Reference","previous_headings":"","what":"Get with Key by Regex — get_with_key","title":"Get with Key by Regex — get_with_key","text":"Get Key Regex","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/get_with_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get with Key by Regex — get_with_key","text":"","code":"get_with_key(l, key, pattern, ...)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/get_with_key.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get with Key by Regex — get_with_key","text":"l list lists key name item inner list pattern regex pattern match values key ... additional arguments pass grepl","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/get_with_key.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get with Key by Regex — get_with_key","text":"subset elements l match pattern","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/git_path_to_raw_github.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert GitHub URLs into Raw Format (not working) — git_path_to_raw_github","title":"Convert GitHub URLs into Raw Format (not working) — git_path_to_raw_github","text":"Convert GitHub URLs Raw Format (working)","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/git_path_to_raw_github.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert GitHub URLs into Raw Format (not working) — git_path_to_raw_github","text":"","code":"git_path_to_raw_github(urls, branch = \"master\")"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/git_path_to_raw_github.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert GitHub URLs into Raw Format (not working) — git_path_to_raw_github","text":"urls TODO branch TODO","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/group_with_dash.html","id":null,"dir":"Reference","previous_headings":"","what":"Simplify String with List of Numbers Grouped by Dashes — group_with_dash","title":"Simplify String with List of Numbers Grouped by Dashes — group_with_dash","text":"Simplify String List Numbers Grouped Dashes","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/group_with_dash.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simplify String with List of Numbers Grouped by Dashes — group_with_dash","text":"","code":"group_with_dash(x)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/group_with_dash.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simplify String with List of Numbers Grouped by Dashes — group_with_dash","text":"x atomic vector","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/group_with_dash.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simplify String with List of Numbers Grouped by Dashes — group_with_dash","text":"length-1 character string giving sorted list numbers contiguous numbers grouped dashes.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/group_with_dash.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simplify String with List of Numbers Grouped by Dashes — group_with_dash","text":"","code":"group_with_dash(c(\"3840\", \"34\", \"2\", \"3\", \"1\", \"33\", '5-50')) #> NULL group_with_dash(group_with_dash(c(\"3840\", \"34\", \"2\", \"3\", \"1\", \"33\", '5-50'))) #> NULL"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/harmonization_lookup_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Harmonization Lookup Tables — harmonization_lookup_tables","title":"Harmonization Lookup Tables — harmonization_lookup_tables","text":"List lookup tables harmonizing historical inconsistencies naming.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/harmonization_lookup_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Harmonization Lookup Tables — harmonization_lookup_tables","text":"","code":"harmonization_lookup_tables"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/harmonization_lookup_tables.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Harmonization Lookup Tables — harmonization_lookup_tables","text":"list data frames, one column historical naming inconsistencies: location  location Unique names locations found IIDDA iso_3166 National jurisdiction codes iso_3166_2 Sub-national jurisdiction codes  sex  sex Unique names sexes found IIDDA iso_5218 Numeric sex codes","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/harmonization_lookup_tables.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Harmonization Lookup Tables — harmonization_lookup_tables","text":"example, NFLD Newfoundland can represented using iso-3166-2 standard CA-NL. tables can joined data IIDDA produce standardized variables harmonize historical inconsistencies.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/icd_finder.html","id":null,"dir":"Reference","previous_headings":"","what":"ICD Finder — icd_finder","title":"ICD Finder — icd_finder","text":"Return Shortest ICD-10 Codes Match Regex Pattern. Requires internet connection.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/icd_finder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ICD Finder — icd_finder","text":"","code":"icd_finder(disease_pattern, maximum_number_results = 10L, ...)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/icd_finder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ICD Finder — icd_finder","text":"disease_pattern Regex pattern describing disease. maximum_number_results Integer giving maximum number ICD codes return, preference given shorter codes. ... Arguments pass grepl. recommended set ignore.case = TRUE often perl = TRUE.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/icd_finder.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ICD Finder — icd_finder","text":"","code":"icd_finder(\"chick\")  ## Struc by chicken!! #>    code                description #> 1   B01     Varicella [chickenpox] #> 2  W613       Contact with chicken #> 3 W6132          Struck by chicken #> 4 W6133          Pecked by chicken #> 5 W6139 Other contact with chicken"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/identify_scales.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify Scales — identify_scales","title":"Identify Scales — identify_scales","text":"Identifies time scales (wk, mo, qr, yr) location types (province country) within tidy dataset.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/identify_scales.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify Scales — identify_scales","text":"","code":"identify_scales(   data,   location_type_fixer = canada_province_scale_finder,   time_scale_identifier = identify_time_scales )"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/identify_scales.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify Scales — identify_scales","text":"data Data frame IIDDA tidy format add time scale location scale information. location_type_fixer Function takes data frame IIDDA tidy format adds fixes `location_type` field. time_scale_identifier Function takes data frame IIDDA tidy format adds `time_scale` field.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/iidda_data_dictionary.html","id":null,"dir":"Reference","previous_headings":"","what":"IIDDA Data Dictionary — iidda_data_dictionary","title":"IIDDA Data Dictionary — iidda_data_dictionary","text":"Get global data dictionary IIDDA","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/iidda_data_dictionary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"IIDDA Data Dictionary — iidda_data_dictionary","text":"","code":"iidda_data_dictionary()"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/iidda_data_dictionary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"IIDDA Data Dictionary — iidda_data_dictionary","text":"function requires internet connection.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/iidda_from_single_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Create New IIDDA Dataset from Single File — iidda_from_single_file","title":"Create New IIDDA Dataset from Single File — iidda_from_single_file","text":"Create New IIDDA Dataset Single File","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/iidda_from_single_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create New IIDDA Dataset from Single File — iidda_from_single_file","text":"","code":"iidda_from_single_file(single_file, new_repo, lifecycle)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/iidda_from_single_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create New IIDDA Dataset from Single File — iidda_from_single_file","text":"single_file path single data file new_repo path new IIDDA repository lifecycle character vector giving lifecycle state (https://github.com/davidearn/iidda/blob/main/LIFECYCLE.md) Probably 'Unreleased', principle 'Static', 'Dynamic', 'Superseded'.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/iidda_from_single_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create New IIDDA Dataset from Single File — iidda_from_single_file","text":"return value. Call produce new directory structure new IIDDA git repository containing single source data file.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/in_git_repo.html","id":null,"dir":"Reference","previous_headings":"","what":"In Git Repo — in_git_repo","title":"In Git Repo — in_git_repo","text":"Git Repo","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/in_git_repo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"In Git Repo — in_git_repo","text":"","code":"in_git_repo()"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/is_empty.html","id":null,"dir":"Reference","previous_headings":"","what":"Is Empty — is_empty","title":"Is Empty — is_empty","text":"Return TRUE string empty. Emptiness means one following true: NA, NaN, nchar(.character(x)) == 0L, tolower(.character(x)) == \"na\"","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/is_empty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is Empty — is_empty","text":"","code":"is_empty(x)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/is_empty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is Empty — is_empty","text":"x object test","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/iso_3166_codes.html","id":null,"dir":"Reference","previous_headings":"","what":"ISO-3166 and ISO-3166-2 Codes — iso_3166_codes","title":"ISO-3166 and ISO-3166-2 Codes — iso_3166_codes","text":"Converts geographical location information, described source document, equivalent ISO-3166 ISO-3166-2 codes.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/iso_3166_codes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ISO-3166 and ISO-3166-2 Codes — iso_3166_codes","text":"","code":"iso_3166_codes(tidy_data, locations_iso)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/iso_3166_codes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ISO-3166 and ISO-3166-2 Codes — iso_3166_codes","text":"tidy_data data frame containing field called location containing geographical location information extracted source document locations_iso table containing three columns: location unique location identifiers tidy_data, iso_3166 containing equivalent ISO-3166 codes (applicable), iso_3166_2 containing equivalent ISO-3166-2 codes (applicable)","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/iso_8601_dateranges.html","id":null,"dir":"Reference","previous_headings":"","what":"ISO-8601 Date Ranges — iso_8601_dateranges","title":"ISO-8601 Date Ranges — iso_8601_dateranges","text":"Converts start end dates ISO-8601-compliant date ranges.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/iso_8601_dateranges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ISO-8601 Date Ranges — iso_8601_dateranges","text":"","code":"iso_8601_dateranges(start_date, end_date)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/iso_8601_dateranges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ISO-8601 Date Ranges — iso_8601_dateranges","text":"start_date date vector end_date date vector","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/iso_8601_dates.html","id":null,"dir":"Reference","previous_headings":"","what":"ISO-8601 Dates — iso_8601_dates","title":"ISO-8601 Dates — iso_8601_dates","text":"Convert date vectors string vectors ISO-8601 compliant format.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/iso_8601_dates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ISO-8601 Dates — iso_8601_dates","text":"","code":"iso_8601_dates(dates)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/iso_8601_dates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ISO-8601 Dates — iso_8601_dates","text":"dates date vector","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/iso_codes.html","id":null,"dir":"Reference","previous_headings":"","what":"Iso Codes — iso_codes","title":"Iso Codes — iso_codes","text":"Superseded iso_3166_codes.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/iso_codes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Iso Codes — iso_codes","text":"","code":"iso_codes(tidy_data, locations_iso = read.csv(\"tracking/locations_ISO.csv\"))"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/iso_codes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Iso Codes — iso_codes","text":"tidy_data data frame containing field called location containing geographical location information extracted source document locations_iso table containing three columns: location unique location identifiers tidy_data, iso_3166 containing equivalent ISO-3166 codes (applicable), iso_3166_2 containing equivalent ISO-3166-2 codes (applicable)","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/json_files_to_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"JSON Files to CSV — json_files_to_csv","title":"JSON Files to CSV — json_files_to_csv","text":"Create CSV file set JSON files.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/json_files_to_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"JSON Files to CSV — json_files_to_csv","text":"","code":"json_files_to_csv(json_paths, csv_path)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/json_files_to_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"JSON Files to CSV — json_files_to_csv","text":"json_paths Vector paths JSON files. csv_path Path saving resulting CSV file.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/json_files_to_data.html","id":null,"dir":"Reference","previous_headings":"","what":"JSON Files to Data — json_files_to_data","title":"JSON Files to Data — json_files_to_data","text":"Create data frame set JSON files.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/json_files_to_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"JSON Files to Data — json_files_to_data","text":"","code":"json_files_to_data(json_paths)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/json_files_to_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"JSON Files to Data — json_files_to_data","text":"json_paths Vector paths JSON files.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/key_val.html","id":null,"dir":"Reference","previous_headings":"","what":"Key-Value — key_val","title":"Key-Value — key_val","text":"Create set key-value pairs extracting elements within list named-lists.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/key_val.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Key-Value — key_val","text":"","code":"key_val(l, key, value)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/key_val.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Key-Value — key_val","text":"l list named lists key name element list l value name element list l","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/key_val.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Key-Value — key_val","text":"","code":"f = system.file(\"example_data_dictionary.json\", package = \"iidda\") d = jsonlite::read_json(f) key_val(d, \"name\", \"type\") #> $location #> [1] \"string\" #>  #> $iso_3166 #> [1] \"string\" #>  #> $iso_3166_2 #> [1] \"string\" #>  #> $period_start_date #> [1] \"date\" #>  #> $period_end_date #> [1] \"date\" #>  #> $disease_family #> [1] \"string\" #>  #> $disease #> [1] \"string\" #>  #> $icd_9 #> [1] \"string\" #>  #> $icd_7 #> [1] \"string\" #>  #> $disease_subclass #> [1] \"string\" #>  #> $icd_9_subclass #> [1] \"string\" #>  #> $icd_7_subclass #> [1] \"string\" #>  #> $lower_age #> [1] \"string\" #>  #> $upper_age #> [1] \"string\" #>  #> $sex #> [1] \"string\" #>  #> $cases_this_period #> [1] \"string\" #>  #> $cases_prev_period #> [1] \"string\" #>  #> $cases_cum_report_year #> [1] \"string\" #>  #> $cases_cum_prev_year #> [1] \"string\" #>  #> $cases_median_prev_5_years #> [1] \"string\" #>  #> $cases_cum_median_prev_5_years #> [1] \"string\" #>  #> $population #> [1] \"string\" #>  #> $cause #> [1] \"string\" #>  #> $location_scale #> [1] \"string\" #>  #> $time_scale #> [1] \"string\" #>"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/list_dataset_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"List Dataset IDs — list_dataset_ids","title":"List Dataset IDs — list_dataset_ids","text":"List Dataset IDs","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/list_dataset_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Dataset IDs — list_dataset_ids","text":"","code":"list_dataset_ids(source)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/list_dataset_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Dataset IDs — list_dataset_ids","text":"source Source ID.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/list_dataset_ids_by_source.html","id":null,"dir":"Reference","previous_headings":"","what":"List Dataset IDs by Source — list_dataset_ids_by_source","title":"List Dataset IDs by Source — list_dataset_ids_by_source","text":"List Dataset IDs Source","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/list_dataset_ids_by_source.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Dataset IDs by Source — list_dataset_ids_by_source","text":"","code":"list_dataset_ids_by_source()"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/list_dependency_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"List Dependency IDs — list_dependency_ids","title":"List Dependency IDs — list_dependency_ids","text":"List Dependency IDs","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/list_dependency_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Dependency IDs — list_dependency_ids","text":"","code":"list_dependency_ids(   source,   dataset,   type = c(\"PrepScripts\", \"Scans\", \"Digitizations\", \"AccessScripts\") )"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/list_dependency_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Dependency IDs — list_dependency_ids","text":"source Source ID. dataset Dataset ID. type Type resource.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/list_dependency_ids_for_source.html","id":null,"dir":"Reference","previous_headings":"","what":"List Dependency IDs for Source — list_dependency_ids_for_source","title":"List Dependency IDs for Source — list_dependency_ids_for_source","text":"List Dependency IDs Source","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/list_dependency_ids_for_source.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Dependency IDs for Source — list_dependency_ids_for_source","text":"","code":"list_dependency_ids_for_source(   source,   type = c(\"PrepScripts\", \"Scans\", \"Digitizations\", \"AccessScripts\") )"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/list_dependency_ids_for_source.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Dependency IDs for Source — list_dependency_ids_for_source","text":"source IIDDA source ID, correspond metadata `metadata/sources/souce.json` folder `pipelines`. type Type dependency.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/list_dependency_paths.html","id":null,"dir":"Reference","previous_headings":"","what":"List Dependency Paths — list_dependency_paths","title":"List Dependency Paths — list_dependency_paths","text":"List Dependency Paths","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/list_dependency_paths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Dependency Paths — list_dependency_paths","text":"","code":"list_dependency_paths(   source,   dataset,   type = c(\"PrepScripts\", \"Scans\", \"Digitizations\", \"AccessScripts\") )"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/list_dependency_paths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Dependency Paths — list_dependency_paths","text":"source Source ID. dataset dataset ID. type Type resource.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/list_extract.html","id":null,"dir":"Reference","previous_headings":"","what":"List Extract — list_extract","title":"List Extract — list_extract","text":"Extract list items regular expression matching names.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/list_extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Extract — list_extract","text":"","code":"list_extract(x, pattern, ...)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/list_extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Extract — list_extract","text":"x list. pattern regular expression ... Arguments pass grepl","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/list_file_id.html","id":null,"dir":"Reference","previous_headings":"","what":"List File ID — list_file_id","title":"List File ID — list_file_id","text":"List File ID","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/list_file_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List File ID — list_file_id","text":"","code":"list_file_id(..., ext)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/list_file_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List File ID — list_file_id","text":"... Path components directory containing resources. ext Optional string giving file extension resources. missing resources given.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/list_file_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List File ID — list_file_id","text":"List matching files without extensions.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/list_prep_script_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"List Prep Script IDs — list_prep_script_ids","title":"List Prep Script IDs — list_prep_script_ids","text":"List Prep Script IDs","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/list_prep_script_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Prep Script IDs — list_prep_script_ids","text":"","code":"list_prep_script_ids(source)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/list_prep_script_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Prep Script IDs — list_prep_script_ids","text":"source Source ID.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/list_resource_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"List Resources IDs — list_resource_ids","title":"List Resources IDs — list_resource_ids","text":"List Resources IDs","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/list_resource_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Resources IDs — list_resource_ids","text":"","code":"list_resource_ids(   source,   type = c(\"TidyDatasets\", \"PrepScripts\", \"Scans\", \"Digitizations\", \"AccessScripts\") )"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/list_resource_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Resources IDs — list_resource_ids","text":"source Source ID. type Type resource.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/list_source_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"List Source IDs — list_source_ids","title":"List Source IDs — list_source_ids","text":"List Source IDs","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/list_source_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Source IDs — list_source_ids","text":"","code":"list_source_ids()"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/list_xpath.html","id":null,"dir":"Reference","previous_headings":"","what":"List XPath — list_xpath","title":"List XPath — list_xpath","text":"Extract elements lists using x-path-like syntax.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/list_xpath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List XPath — list_xpath","text":"","code":"list_xpath(l, ...)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/list_xpath.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List XPath — list_xpath","text":"l hierarchical list. ... Character strings describing path hierarchy.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/list_xpath.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List XPath — list_xpath","text":"","code":"l = list(   a = list(     A = list(       i = 1,       ii = 2     ),     B = list(       i = 3,       ii = 4     )  ),  b = list(     A = list(       i = 5,       ii = 6     ),     B = list(       i = 7,       ii = 8     )   ) ) list_xpath(l, \"A\", \"i\") #> $a #> [1] 1 #>  #> $b #> [1] 5 #>  list_xpath(l, \"B\", \"ii\") #> $a #> [1] 4 #>  #> $b #> [1] 8 #>"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/lookup.html","id":null,"dir":"Reference","previous_headings":"","what":"Lookup Value — lookup","title":"Lookup Value — lookup","text":"Lookup Value","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/lookup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lookup Value — lookup","text":"","code":"lookup(named_keys, l)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/lookup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lookup Value — lookup","text":"named_keys named character vector values giving keys lookup l l list names match values keys","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/make_age_hash_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Age Hash Table — make_age_hash_table","title":"Make Age Hash Table — make_age_hash_table","text":"Create lookup function takes character vector disease category names returns vector equal length containing either lower upper age bounds contained categories. bound present NA returned.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/make_age_hash_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Age Hash Table — make_age_hash_table","text":"","code":"make_age_hash_table(   categories,   re_templates,   which_bound = c(\"lower\", \"upper\", \"neither\", \"single\"),   prefix = \"\" )"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/make_age_hash_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Age Hash Table — make_age_hash_table","text":"categories character vector disease category names re_templates list templates resolve regular expressions matching age information contained category names which_bound resolve template match lower upper bounds, neither (default), single prefix pattern match beginning string marks beginning age information","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/make_age_hash_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make Age Hash Table — make_age_hash_table","text":"vector containing either lower upper age bounds contained categories","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/make_compilation_dependencies.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Compilation Dependencies — make_compilation_dependencies","title":"Make Compilation Dependencies — make_compilation_dependencies","text":"Create dependency file prep script dataset compilation datasets. files created edits made manually created files.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/make_compilation_dependencies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Compilation Dependencies — make_compilation_dependencies","text":"","code":"make_compilation_dependencies(compilation_dataset, dataset_paths)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/make_compilation_dependencies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Compilation Dependencies — make_compilation_dependencies","text":"compilation_dataset Dataset ID dependencies declared. dataset_paths Relative paths dependencies.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/make_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Create IIDDA Config File — make_config","title":"Create IIDDA Config File — make_config","text":"Create IIDDA Config File","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/make_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create IIDDA Config File — make_config","text":"","code":"make_config(   path = file.path(getwd(), \"config.json\"),   iidda_owner = \"\",   iidda_repo = \"\",   github_token = \"\",   .overwrite = FALSE )"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/make_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create IIDDA Config File — make_config","text":"path path storing config file iidda_owner TODO iidda_repo TODO github_token TODO .overwrite existing config.json files overwritten","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/make_data_cite_tidy_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Make DataCite JSON Metadata — make_data_cite_tidy_data","title":"Make DataCite JSON Metadata — make_data_cite_tidy_data","text":"Make DataCite JSON Metadata","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/make_data_cite_tidy_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make DataCite JSON Metadata — make_data_cite_tidy_data","text":"","code":"make_data_cite_tidy_data(metadata, file)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/make_data_cite_tidy_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make DataCite JSON Metadata — make_data_cite_tidy_data","text":"metadata Output get_tracking_metadata file Path metadata file","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/make_dataset_dependencies.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Dataset Dependencies — make_dataset_dependencies","title":"Make Dataset Dependencies — make_dataset_dependencies","text":"Create dependency file dataset. file created edits made manually created file.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/make_dataset_dependencies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Dataset Dependencies — make_dataset_dependencies","text":"","code":"make_dataset_dependencies(tidy_dataset, paths)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/make_dataset_dependencies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Dataset Dependencies — make_dataset_dependencies","text":"tidy_dataset Dataset ID dependencies declared. paths Relative paths dependencies.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/make_dataset_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Dataset Metadata — make_dataset_metadata","title":"Make Dataset Metadata — make_dataset_metadata","text":"Make Dataset Metadata","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/make_dataset_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Dataset Metadata — make_dataset_metadata","text":"","code":"make_dataset_metadata(tidy_dataset, type, ...)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/make_dataset_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Dataset Metadata — make_dataset_metadata","text":"tidy_dataset Dataset ID metadata produced. type Type dataset (e.g., CDI, Mortality). ... Additional metadata fields provide. invalid fields supplied, error message given.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/make_resource_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Resource Metadata — make_resource_metadata","title":"Make Resource Metadata — make_resource_metadata","text":"Make one json metadata file resource (.e., prep/access script digitization/scan data)) source pipeline associated data source (.e., sub-directory `pipelines`). Existing metadata files overwritten.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/make_resource_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Resource Metadata — make_resource_metadata","text":"","code":"make_resource_metadata(source)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/make_resource_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Resource Metadata — make_resource_metadata","text":"source Source ID.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/make_source_directory.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Source Directory — make_source_directory","title":"Make Source Directory — make_source_directory","text":"Make sub-directory `pipelines` containing data /code source.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/make_source_directory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Source Directory — make_source_directory","text":"","code":"make_source_directory(source, files)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/make_source_directory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Source Directory — make_source_directory","text":"source Source ID. files Character vector files either already pipeline added.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/make_source_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Source Metadata — make_source_metadata","title":"Make Source Metadata — make_source_metadata","text":"Make json file associated new data source (.e., sub-directory `pipelines`).","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/make_source_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Source Metadata — make_source_metadata","text":"","code":"make_source_metadata(source, organization, location, ...)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/make_source_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Source Metadata — make_source_metadata","text":"source Source ID. organization Organization source obtained. location Location data collected. ... Additional metadata fields provide. invalid fields supplied, error message given.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/melt_tracking_table_keys.html","id":null,"dir":"Reference","previous_headings":"","what":"Melt Tracking Table Keys (Deprecated) — melt_tracking_table_keys","title":"Melt Tracking Table Keys (Deprecated) — melt_tracking_table_keys","text":"used conjunction tracking_table_keys.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/melt_tracking_table_keys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Melt Tracking Table Keys (Deprecated) — melt_tracking_table_keys","text":"","code":"melt_tracking_table_keys(keys)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/melt_tracking_table_keys.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Melt Tracking Table Keys (Deprecated) — melt_tracking_table_keys","text":"keys Character vector ","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/mock_api_hook.html","id":null,"dir":"Reference","previous_headings":"","what":"Mock API Hook — mock_api_hook","title":"Mock API Hook — mock_api_hook","text":"Mock API Hook","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/mock_api_hook.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mock API Hook — mock_api_hook","text":"","code":"mock_api_hook(repo_path)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/mock_api_hook.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mock API Hook — mock_api_hook","text":"repo_path Path IIDDA repository.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/nlist.html","id":null,"dir":"Reference","previous_headings":"","what":"Self-Naming List — nlist","title":"Self-Naming List — nlist","text":"Copied lme4:::namedList.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/nlist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Self-Naming List — nlist","text":"","code":"nlist(...)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/nlist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Self-Naming List — nlist","text":"... list objects","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/non_numeric_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Non-Numeric Report — non_numeric_report","title":"Non-Numeric Report — non_numeric_report","text":"Save records dataset contain non-numeric data within specified numeric field. report saved `supporting-output/dataset_id` directory.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/non_numeric_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Non-Numeric Report — non_numeric_report","text":"","code":"non_numeric_report(data, numeric_column, dataset_id)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/non_numeric_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Non-Numeric Report — non_numeric_report","text":"data Data frame. numeric_column Name numeric column data. dataset_id ID dataset data become, likely processing.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/normalize_diseases.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize Diseases — normalize_diseases","title":"Normalize Diseases — normalize_diseases","text":"Normalize names diseases simplify harmonization disease names across historical sources.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/normalize_diseases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize Diseases — normalize_diseases","text":"","code":"normalize_diseases(diseases)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/normalize_diseases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize Diseases — normalize_diseases","text":"diseases Character vector disease names","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/open_locally.html","id":null,"dir":"Reference","previous_headings":"","what":"Open a Path on Mac OS or Windows — open_locally","title":"Open a Path on Mac OS or Windows — open_locally","text":"Open Path Mac OS Windows","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/open_locally.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open a Path on Mac OS or Windows — open_locally","text":"","code":"open_locally(urls, command = \"open\", args = character())  open_resources_locally(   id,   type = c(\"scans\", \"digitizations\", \"prep-scripts\", \"access-scripts\") )  open_all_resources_locally(id)  open_scans_locally(id)  open_digitizations_locally(id)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/open_locally.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open a Path on Mac OS or Windows — open_locally","text":"urls Character vector GitHub URLs blob storage command Command-line function use open file (applicable Windows systems. args Additional options pass command (ignored Windows systems). id Resource ID. type Type resource.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/open_locally.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Open a Path on Mac OS or Windows — open_locally","text":"open_resources_locally(): Open IIDDA pipeline resources locally. open_all_resources_locally(): Open pipeline resources regardless resource type. open_scans_locally(): Open scans locally. open_digitizations_locally(): Open digitizations locally.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/or_pattern.html","id":null,"dir":"Reference","previous_headings":"","what":"Or Pattern — or_pattern","title":"Or Pattern — or_pattern","text":"Construct regex Boolean-.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/or_pattern.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Or Pattern — or_pattern","text":"","code":"or_pattern(x, at_start = TRUE, at_end = TRUE)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/or_pattern.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Or Pattern — or_pattern","text":"x Character vector alternative patterns. at_start Match start strings. at_end Match end strings.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/pad_weeks.html","id":null,"dir":"Reference","previous_headings":"","what":"Pad Weeks — pad_weeks","title":"Pad Weeks — pad_weeks","text":"Add rows data frame `cases_this_period` `period_end_date` representing missing weeks. TODO: generalize time scales.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/pad_weeks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pad Weeks — pad_weeks","text":"","code":"pad_weeks(data, ...)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/pad_weeks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pad Weeks — pad_weeks","text":"data Data frame cases_this_period columns period_end_date column spaced weekly (possibly gaps). ... Passed data.frame create new constant columns.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/pad_weeks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pad Weeks — pad_weeks","text":"input `data` new rows missing weeks. rows `NA` `cases_this_period` columns passed `...` constant input `data` (case constant values passed output data frame).","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/pad_weeks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Pad Weeks — pad_weeks","text":"use https://github.com/EdwinTh/padr.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/pager.html","id":null,"dir":"Reference","previous_headings":"","what":"Pager — pager","title":"Pager — pager","text":"Pager","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/pager.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pager — pager","text":"","code":"pager(page, n_per_page, rev = TRUE)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/pager.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pager — pager","text":"page page returned? n_per_page many entries page? rev page one end?","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/pager.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pager — pager","text":"Function `x` return `page`th `page` size `n_per_page` `x`.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/parse_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse Columns — parse_columns","title":"Parse Columns — parse_columns","text":"Set types dataset character-valued columns using data dictionary defines types.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/parse_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse Columns — parse_columns","text":"","code":"parse_columns(data, data_dictionary)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/parse_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse Columns — parse_columns","text":"data Data frame character-valued columns. data_dictionary List lists giving data dictionary.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/paste_operators.html","id":null,"dir":"Reference","previous_headings":"","what":"Paste Operators — paste_operators","title":"Paste Operators — paste_operators","text":"Syntactic sugar common string pasting operations.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/paste_operators.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Paste Operators — paste_operators","text":"","code":"x %_% y  x %+% y  x %.% y  x %-% y"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/paste_operators.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Paste Operators — paste_operators","text":"x character vector y character vector","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/paste_operators.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Paste Operators — paste_operators","text":"x concatenated y","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/paste_operators.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Paste Operators — paste_operators","text":"%+% Paste blank separator, like python string concatenation %_% Paste underscore separator %.% Paste dot separator – useful adding file extensions %-% Paste dash separator – useful representing contiguous numbers","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/paste_operators.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Paste Operators — paste_operators","text":"","code":"'google' %.% 'com' #> [1] \"google.com\" 'snake' %_% 'case' #> [1] \"snake_case\""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/pipeline_exploration_starter.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipeline Exploration Quick-Start — pipeline_exploration_starter","title":"Pipeline Exploration Quick-Start — pipeline_exploration_starter","text":"Create R script providing place start exploring IIDDA pipeline.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/pipeline_exploration_starter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipeline Exploration Quick-Start — pipeline_exploration_starter","text":"","code":"pipeline_exploration_starter(script_filename, exploration_project_path, ...)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/pipeline_exploration_starter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipeline Exploration Quick-Start — pipeline_exploration_starter","text":"script_filename Name generated script. exploration_project_path Path folder containing script. path exist, created. script_filename exists exploration_project_path, error returned. ... Additional arguments pass file.copy. useful argument `overwrite`, indicates whether existing exploration script overwritten.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/pipeline_exploration_starter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Pipeline Exploration Quick-Start — pipeline_exploration_starter","text":"R script following: 1. Example code printing data sources datasets IIDDA pipeline repository. 2. Code finding paths datasets scripts generating . 3. Code generating /reading user-selected IIDDA dataset. data read , user free whatever want .","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/pkg_versions.html","id":null,"dir":"Reference","previous_headings":"","what":"Package Versions — pkg_versions","title":"Package Versions — pkg_versions","text":"Package Versions","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/pkg_versions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Package Versions — pkg_versions","text":"","code":"pkg_versions(dir, file)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/pkg_versions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Package Versions — pkg_versions","text":"dir Directory containing R scripts file Name R file containing ","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/pkg_versions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Package Versions — pkg_versions","text":"Character vector containing version numbers packages loaded `library` commands without surrounding whitespace appear `R` files (recursively) `dir`","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/proj_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Project Path — proj_path","title":"Project Path — proj_path","text":"Return path absolute form (specified) relative IIDDA project root found using proj_root.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/proj_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Project Path — proj_path","text":"","code":"proj_path(...)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/proj_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Project Path — proj_path","text":"... Path components file.path.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/proj_root.html","id":null,"dir":"Reference","previous_headings":"","what":"Project Root — proj_root","title":"Project Root — proj_root","text":"Find root path IIDDA-associated project (project file specific name root).","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/proj_root.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Project Root — proj_root","text":"","code":"proj_root(filename = \".iidda\", start_dir = getwd(), default_root = start_dir)  in_proj(filename = \".iidda\", start_dir = getwd())"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/proj_root.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Project Root — proj_root","text":"filename String giving name file identifies project. start_dir Optional directory start looking `filename`. default_root Project root use `filename` found.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/proj_root.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Project Root — proj_root","text":"Recursively walk file tree `start_dir` `filename` found, return path directory containing `filename`. `filename` found, return `default_root`","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/proj_root.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Project Root — proj_root","text":"in_proj(): particular directory inside project indicated `filename`.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/raw_github.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct an URL to Download Single Files from GitHub — raw_github","title":"Construct an URL to Download Single Files from GitHub — raw_github","text":"Uses Raw GitHub API","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/raw_github.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct an URL to Download Single Files from GitHub — raw_github","text":"","code":"raw_github(owner, repo, path, user = NULL, token = NULL, branch = \"master\")"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/raw_github.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct an URL to Download Single Files from GitHub — raw_github","text":"owner User Organization repo repo Repository name path Path file want obtain user username (required private repos) token OAuth personal access token (required private repos) branch Name branch (defaults 'master')","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/read_column_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Column Metadata — read_column_metadata","title":"Read Column Metadata — read_column_metadata","text":"Read Column Metadata","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/read_column_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Column Metadata — read_column_metadata","text":"","code":"read_column_metadata(dataset, pattern)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/read_column_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Column Metadata — read_column_metadata","text":"dataset IIDDA dataset ID. pattern Regular expression pattern filtering candidate paths read .","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/read_data_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Data Columns — read_data_columns","title":"Read Data Columns — read_data_columns","text":"Read Data Columns","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/read_data_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Data Columns — read_data_columns","text":"","code":"read_data_columns(filename)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/read_data_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Data Columns — read_data_columns","text":"filename Path CSV file IIDDA format.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/read_data_frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Data Frame — read_data_frame","title":"Read Data Frame — read_data_frame","text":"Read data frame CSV file using CSV dialect adopted IIDDA.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/read_data_frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Data Frame — read_data_frame","text":"","code":"read_data_frame(filename, col_classes = \"character\")"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/read_data_frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Data Frame — read_data_frame","text":"filename String giving filename. col_classes See colClasses read.table.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/read_digitized_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Digitized Data — read_digitized_data","title":"Read Digitized Data — read_digitized_data","text":"Read digitized data prepared within IIDDA project.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/read_digitized_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Digitized Data — read_digitized_data","text":"","code":"read_digitized_data(metadata)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/read_digitized_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Digitized Data — read_digitized_data","text":"metadata Output get_tracking_metadata.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/read_global_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Global Metadata — read_global_metadata","title":"Read Global Metadata — read_global_metadata","text":"Read Global Metadata","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/read_global_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Global Metadata — read_global_metadata","text":"","code":"read_global_metadata(   id,   type = c(\"columns\", \"organization\", \"sources\", \"tidy-datasets\") )"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/read_global_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Global Metadata — read_global_metadata","text":"id ID `type` entity. type Type entity.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/read_lookup.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Lookup — read_lookup","title":"Read Lookup — read_lookup","text":"Read Lookup","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/read_lookup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Lookup — read_lookup","text":"","code":"read_lookup(lookup_id)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/read_lookup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Lookup — read_lookup","text":"lookup_id IIDDA ID associated item `lookup-tables` directory IIDDA repository.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/read_prerequisite_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Prerequisite Data — read_prerequisite_data","title":"Read Prerequisite Data — read_prerequisite_data","text":"Read Prerequisite Data","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/read_prerequisite_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Prerequisite Data — read_prerequisite_data","text":"","code":"read_prerequisite_data(dataset_id, numeric_column_for_report = NULL)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/read_prerequisite_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Prerequisite Data — read_prerequisite_data","text":"dataset_id IIDDA dataset ID. numeric_column_for_report Optional numeric column name specify producing report using non_numeric_report.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/read_prerequisite_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Prerequisite Metadata — read_prerequisite_metadata","title":"Read Prerequisite Metadata — read_prerequisite_metadata","text":"Read Prerequisite Metadata","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/read_prerequisite_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Prerequisite Metadata — read_prerequisite_metadata","text":"","code":"read_prerequisite_metadata(dataset, pattern)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/read_prerequisite_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Prerequisite Metadata — read_prerequisite_metadata","text":"dataset IIDDA dataset ID. pattern Regular expression pattern filtering candidate paths metadata.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/read_prerequisite_paths.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Prerequisite Paths — read_prerequisite_paths","title":"Read Prerequisite Paths — read_prerequisite_paths","text":"Read Prerequisite Paths","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/read_prerequisite_paths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Prerequisite Paths — read_prerequisite_paths","text":"","code":"read_prerequisite_paths(dataset, pattern)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/read_prerequisite_paths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Prerequisite Paths — read_prerequisite_paths","text":"dataset IIDDA dataset ID. pattern Regular expression pattern filtering candidate paths read .","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/read_resource_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Resource Metadata — read_resource_metadata","title":"Read Resource Metadata — read_resource_metadata","text":"Read Resource Metadata","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/read_resource_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Resource Metadata — read_resource_metadata","text":"","code":"read_resource_metadata(dataset, pattern)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/read_resource_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Resource Metadata — read_resource_metadata","text":"dataset IIDDA dataset ID. pattern Regular expression pattern filtering candidate paths read .","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/read_tidy_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Tidy Data and Metadata files — read_tidy_data","title":"Read Tidy Data and Metadata files — read_tidy_data","text":"Read Tidy Data Metadata files","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/read_tidy_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Tidy Data and Metadata files — read_tidy_data","text":"","code":"read_tidy_data(tidy_data_path, just_csv = FALSE)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/read_tidy_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Tidy Data and Metadata files — read_tidy_data","text":"tidy_data_path path folder containing 4 files: tidy data resulting metadata prep script just_csv return tidy csv file list csv metadata","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/read_tracking_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Tracking Tables — read_tracking_tables","title":"Read Tracking Tables — read_tracking_tables","text":"Read metadata tracking tables IIDDA project.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/read_tracking_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Tracking Tables — read_tracking_tables","text":"","code":"read_tracking_tables(path)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/read_tracking_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Tracking Tables — read_tracking_tables","text":"path Path containing tracking tables.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/readme_classic_iidda.html","id":null,"dir":"Reference","previous_headings":"","what":"README File Template — readme_classic_iidda","title":"README File Template — readme_classic_iidda","text":"(Deprecated)","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/readme_classic_iidda.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"README File Template — readme_classic_iidda","text":"","code":"readme_classic_iidda"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/readme_classic_iidda.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"README File Template — readme_classic_iidda","text":"object class character length 1.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/register_prep_script.html","id":null,"dir":"Reference","previous_headings":"","what":"Register Prep Script — register_prep_script","title":"Register Prep Script — register_prep_script","text":"Convenience function one-time setup metadata required new prep script. assumptions (1) prep script `.R` file `prep-scripts` directory directory within `pipelines` directory (2) script produces csv file `derived-datasets` directory `basename()` `.R` file. Messages printed paths newly created /existing metadata, derived data, dependency files checked manually. Sometimes helpful delete files rerun `register_prep_script`. However, `register_prep_script` function used script intended run multiple times, going forward metadata dependency files edited manually.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/register_prep_script.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Register Prep Script — register_prep_script","text":"","code":"register_prep_script(script_path, type)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/register_prep_script.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Register Prep Script — register_prep_script","text":"script_path Path prep-script registered. type Type dataset produced (e.g., CDI, Mortality). TODO: Give list acceptable values. programmatically produced.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/relative_paths.html","id":null,"dir":"Reference","previous_headings":"","what":"Relative Paths — relative_paths","title":"Relative Paths — relative_paths","text":"Convert set absolute paths relative paths respect specified `containing_path`","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/relative_paths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Relative Paths — relative_paths","text":"","code":"relative_paths(paths, containing_path = proj_root())"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/relative_paths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Relative Paths — relative_paths","text":"paths Vector absolute paths. containing_path Target working directory relative .","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/remote_iidda_git.html","id":null,"dir":"Reference","previous_headings":"","what":"Remote IIDDA Git — remote_iidda_git","title":"Remote IIDDA Git — remote_iidda_git","text":"Remote IIDDA Git","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/remote_iidda_git.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remote IIDDA Git — remote_iidda_git","text":"","code":"remote_iidda_git()"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/remove_age.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove Age — remove_age","title":"Remove Age — remove_age","text":"Remove age information vector category names","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/remove_age.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove Age — remove_age","text":"","code":"remove_age(categories, re_templates, prefix = \"\")  memoise_remove_age(categories, re_templates, prefix = \"\")"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/remove_age.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove Age — remove_age","text":"categories vector category names re_templates list templates resolve regular expressions matching age information contained category names prefix pattern match beginning string marks beginning age information","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/remove_between_paren.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove Parenthesized Substring — remove_between_paren","title":"Remove Parenthesized Substring — remove_between_paren","text":"Remove Parenthesized Substring","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/remove_between_paren.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove Parenthesized Substring — remove_between_paren","text":"","code":"remove_between_paren(   x,   left = \"\\\\(\",   right = \"\\\\)\",   contents_pattern = \".*\" )"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/remove_between_paren.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove Parenthesized Substring — remove_between_paren","text":"x Character vector left Left parenthetical string right Right parenthetical string contents_pattern Regex pattern contents parentheses","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/remove_between_paren.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove Parenthesized Substring — remove_between_paren","text":"Version x first parenthesized substrings removed","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/remove_between_paren.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove Parenthesized Substring — remove_between_paren","text":"","code":"x = c(\"-\", \"\", NA, \"1\", \"3\", \"1 (Alta.)\", \"(Sask) 20\") remove_between_paren(x) #> [1] \"-\"   \"\"    NA    \"1\"   \"3\"   \"1 \"  \" 20\""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/return_matched_age_bound.html","id":null,"dir":"Reference","previous_headings":"","what":"Matched Age Bound — return_matched_age_bound","title":"Matched Age Bound — return_matched_age_bound","text":"Process output regmatches return correct age bound. Used lookup function created make_age_hash_table","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/return_matched_age_bound.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Matched Age Bound — return_matched_age_bound","text":"","code":"return_matched_age_bound(x)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/return_matched_age_bound.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Matched Age Bound — return_matched_age_bound","text":"x character vector list output regmatches, containing regex matches age bound information contained disease category names. x corresponds single category.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/return_matched_age_bound.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Matched Age Bound — return_matched_age_bound","text":"Character string matched age bound","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/rm_trailing_slash.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove Trailing / Leading Slash — rm_trailing_slash","title":"Remove Trailing / Leading Slash — rm_trailing_slash","text":"Remove Trailing / Leading Slash","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/rm_trailing_slash.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove Trailing / Leading Slash — rm_trailing_slash","text":"","code":"rm_trailing_slash(x)  rm_leading_slash(x)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/rm_trailing_slash.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove Trailing / Leading Slash — rm_trailing_slash","text":"x Character vector paths.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/rm_trailing_slash.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove Trailing / Leading Slash — rm_trailing_slash","text":"Character vector without trailing/leading slash.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/save_result.html","id":null,"dir":"Reference","previous_headings":"","what":"Save Results of a Data Prep Script — save_result","title":"Save Results of a Data Prep Script — save_result","text":"Save resulting objects data prep script R data file. names resulting objects given names result list.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/save_result.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save Results of a Data Prep Script — save_result","text":"","code":"save_result(result, metadata)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/save_result.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save Results of a Data Prep Script — save_result","text":"result Named list data resulting data prep scripts metadata Nested named list describing metadata result. must $Product[[\"Path tidy data\"]] component, GitHub URL describing ultimate location R data file. GitHub component URL removed produce path correspond location within cloned git repository – note path relative top-level cloned repository.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/set_ext.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Extension — set_ext","title":"Set Extension — set_ext","text":"Set Extension","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/set_ext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Extension — set_ext","text":"","code":"set_ext(paths, ext)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/set_ext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Extension — set_ext","text":"paths Character vector giving file paths. ext String giving file extension add paths.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/set_iidda_col_types.html","id":null,"dir":"Reference","previous_headings":"","what":"Set IIDDA Column Types — set_iidda_col_types","title":"Set IIDDA Column Types — set_iidda_col_types","text":"Deprecated – iidda.api package robust.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/set_iidda_col_types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set IIDDA Column Types — set_iidda_col_types","text":"","code":"set_iidda_col_types(data)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/set_iidda_col_types.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set IIDDA Column Types — set_iidda_col_types","text":"data Dataset IIDDA Api","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/set_types.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Data Frame Column Types — set_types","title":"Set Data Frame Column Types — set_types","text":"Set types columns data frame.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/set_types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Data Frame Column Types — set_types","text":"","code":"set_types(data, types)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/set_types.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Data Frame Column Types — set_types","text":"data data frame types dict-like list keys giving column names values giving types","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/set_types.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Data Frame Column Types — set_types","text":"data frame changed column types – note returned data frame plain base R data.frame (.e. tibble data.table).","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/source_from_digitization_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Source from Digitization ID — source_from_digitization_id","title":"Source from Digitization ID — source_from_digitization_id","text":"Source Digitization ID","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/source_from_digitization_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Source from Digitization ID — source_from_digitization_id","text":"","code":"source_from_digitization_id(digitization_ids)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/source_from_digitization_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Source from Digitization ID — source_from_digitization_id","text":"digitization_ids Character vector digitization IDs","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/source_from_digitization_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Source from Digitization ID — source_from_digitization_id","text":"Character vector source IDs associated digitization.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/sprintf_named.html","id":null,"dir":"Reference","previous_headings":"","what":"Lightweight Templating — sprintf_named","title":"Lightweight Templating — sprintf_named","text":"Version sprintf base R function adds basic templating – https://stackoverflow.com//55423080/2047693.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/sprintf_named.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lightweight Templating — sprintf_named","text":"","code":"sprintf_named(template, ..., .check = TRUE)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/sprintf_named.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lightweight Templating — sprintf_named","text":"template template ... Named arguments strings fill template variables name %{ }s .check consistency arguments template checked?","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/sprintf_named.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Lightweight Templating — sprintf_named","text":"based sprintf function, use %% like single % appear template. However, supplying single % named argument result single % output. can use syntactically invalid names arguments enclosing backticks argument list, template.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/sprintf_named.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lightweight Templating — sprintf_named","text":"","code":"sprintf_named(\"You might like to download datasets from %{repo}s.\", repo = \"IIDDA\") #> [1] \"You might like to download datasets from IIDDA.\""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/standards.html","id":null,"dir":"Reference","previous_headings":"","what":"Standards — standards","title":"Standards — standards","text":"List lists lists exploits tab completion make convenient get vectors synonyms associated particular standard code. mechanism useful searching data IIDDA.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/standards.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standards — standards","text":"","code":"standards"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/standards.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Standards — standards","text":"List lists character vectors containing original historical names: location  iso_3166 Historical national names associated iso-3166 code. iso_3166_inclusive Historical national sub-national names associated         iso-3166 code. iso_3166_2 Historical sub-national names associated iso-3166-2 code.  sex  iso_5218 Historical names referring sexes associated         iso-5218 code.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/statcan_mort_prep.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare Mortality Data from Statistics Canada — statcan_mort_prep","title":"Prepare Mortality Data from Statistics Canada — statcan_mort_prep","text":"Prepare Mortality Data Statistics Canada","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/statcan_mort_prep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare Mortality Data from Statistics Canada — statcan_mort_prep","text":"","code":"statcan_mort_prep(data)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/statcan_mort_prep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare Mortality Data from Statistics Canada — statcan_mort_prep","text":"data Output read_digitized_data filtered include cell range contains data.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/statcan_mort_prep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare Mortality Data from Statistics Canada — statcan_mort_prep","text":"Data frame complying IIDDA requirements tidy datasets.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/strip_blob_github.html","id":null,"dir":"Reference","previous_headings":"","what":"Strip Blob — strip_blob_github","title":"Strip Blob — strip_blob_github","text":"Strip 'blob part' GitHub URL path relative local clone associated repo.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/strip_blob_github.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Strip Blob — strip_blob_github","text":"","code":"strip_blob_github(urls)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/strip_blob_github.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Strip Blob — strip_blob_github","text":"urls Character vector GitHub URLs blob storage","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/strip_blob_github.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Strip Blob — strip_blob_github","text":"","code":"strip_blob_github(\"https://github.com/canmod/iidda-tools/blob/main/R/iidda/R/github_parsing.R\") #> [1] \"R/iidda/R/github_parsing.R\""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/sum_timescales.html","id":null,"dir":"Reference","previous_headings":"","what":"Sum Timescales — sum_timescales","title":"Sum Timescales — sum_timescales","text":"Sum Timescales","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/sum_timescales.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sum Timescales — sum_timescales","text":"","code":"sum_timescales(data, filter_out_bad_time_scales = TRUE)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/sum_timescales.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sum Timescales — sum_timescales","text":"data Data frame aggregate different time scales. filter_out_bad_time_scales time scales filtered reasonable number periods (e.g., 600 weeks year filtered ).","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/summarise_dates.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise Dates — summarise_dates","title":"Summarise Dates — summarise_dates","text":"Consecutive overlapping date ranges summarised single date range, non-consecutive date ranges kept .","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/summarise_dates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise Dates — summarise_dates","text":"","code":"summarise_dates(x_start, x_end, range_operator = \" to \", collapse = TRUE)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/summarise_dates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise Dates — summarise_dates","text":"x_start vector period starting dates. x_end vector period ending dates. range_operator string go start end date, defaults \" \". collapse boolean collapse dates one comma separated string, defaults TRUE.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/summarise_dates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise Dates — summarise_dates","text":"vector single string summarised date ranges.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/summarise_diseases.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise Diseases — summarise_diseases","title":"Summarise Diseases — summarise_diseases","text":"Summarise disease name columns IIDDA dataset.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/summarise_diseases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise Diseases — summarise_diseases","text":"","code":"summarise_diseases(data)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/summarise_diseases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise Diseases — summarise_diseases","text":"data Data frame hopefully containing least one `disease` `historical_disease`. missing output summary blank string.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/summarise_diseases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise Diseases — summarise_diseases","text":"string summarizing data columns.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/summarise_integers.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise Integers — summarise_integers","title":"Summarise Integers — summarise_integers","text":"Consecutive overlapping integers separated commas semi-colons summarised single integer range, non-consecutive integer ranges kept .","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/summarise_integers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise Integers — summarise_integers","text":"","code":"summarise_integers(x, range_operator = \"-\", collapse = TRUE)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/summarise_integers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise Integers — summarise_integers","text":"x vector integers range_operator string go starting ending integer range, defaults \"-\". collapse boolean collapse integer ranges one comma separated string, defaults TRUE.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/summarise_integers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise Integers — summarise_integers","text":"vector single string summarised integer ranges.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/summarise_locations.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise Locations — summarise_locations","title":"Summarise Locations — summarise_locations","text":"Summarise several columns IIDDA dataset specify geographic location row.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/summarise_locations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise Locations — summarise_locations","text":"","code":"summarise_locations(data)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/summarise_locations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise Locations — summarise_locations","text":"data Data frame hopefully containing least one  `iso_3166`, `iso_3166_2`, `location`. missing output summary blank string.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/summarise_locations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise Locations — summarise_locations","text":"string summarizing data columns.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/summarise_periods.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise Periods — summarise_periods","title":"Summarise Periods — summarise_periods","text":"Summarise time periods IIDDA dataset.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/summarise_periods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise Periods — summarise_periods","text":"","code":"summarise_periods(data, cutoff = 50)  summarise_periods_vec(period_start_date, period_end_date, cutoff = 50)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/summarise_periods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise Periods — summarise_periods","text":"data Data frame hopefully containing `period_start_date` `period_end_date`. either missing error results. cutoff Number characters, output string takes form `max-date min-date (gaps)`. period_start_date Column start dates periods. period_end_date Column end dates periods.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/summarise_periods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise Periods — summarise_periods","text":"string summarizing data columns","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/summarise_periods.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Summarise Periods — summarise_periods","text":"summarise_periods_vec(): use inside `mutate` `summarise` functions.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/summarise_strings.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise Strings — summarise_strings","title":"Summarise Strings — summarise_strings","text":"Summarise vector strings separated commas semi-colons single character separated string. Removes empty strings, repeated strings trims white space.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/summarise_strings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise Strings — summarise_strings","text":"","code":"summarise_strings(x, sep = \", \")"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/summarise_strings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise Strings — summarise_strings","text":"x vector sep character separator, defaults \", \"","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/summarise_strings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise Strings — summarise_strings","text":"single string summarised strings.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/test_result.html","id":null,"dir":"Reference","previous_headings":"","what":"Test Results — test_result","title":"Test Results — test_result","text":"Test results data prep script (finished).","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/test_result.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test Results — test_result","text":"","code":"test_result(result)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/test_result.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test Results — test_result","text":"result Named list data resulting data prep scripts","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/time_series_islands.html","id":null,"dir":"Reference","previous_headings":"","what":"Time Series Islands — time_series_islands","title":"Time Series Islands — time_series_islands","text":"Find 'island rows' dataset ordered rows. Islands series variable `NA` surrounded `NA` values variable. function work well pad_weeks, looking weekly 'islands'.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/time_series_islands.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Time Series Islands — time_series_islands","text":"","code":"time_series_islands(data, series_variable, time_variable = NULL)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/time_series_islands.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Time Series Islands — time_series_islands","text":"data dataset (must ordered `time_variable` `NULL`). series_variable Name series variable. time_variable Optional variable use ordering dataset islands located.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/tracking_table_keys.html","id":null,"dir":"Reference","previous_headings":"","what":"Tracking Table Keys — tracking_table_keys","title":"Tracking Table Keys — tracking_table_keys","text":"Tracking Table Keys","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/tracking_table_keys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tracking Table Keys — tracking_table_keys","text":"","code":"tracking_table_keys"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/tracking_table_keys.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Tracking Table Keys — tracking_table_keys","text":"object class list length 5.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/tracking_tables_with_column.html","id":null,"dir":"Reference","previous_headings":"","what":"Which Tracking Tables have a Particular Column — tracking_tables_with_column","title":"Which Tracking Tables have a Particular Column — tracking_tables_with_column","text":"Tracking Tables Particular Column","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/tracking_tables_with_column.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Which Tracking Tables have a Particular Column — tracking_tables_with_column","text":"","code":"tracking_tables_with_column(metadata, col_nm)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/tracking_tables_with_column.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Which Tracking Tables have a Particular Column — tracking_tables_with_column","text":"metadata Output read_tracking_tables. col_nm Name column.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/two_field_format.html","id":null,"dir":"Reference","previous_headings":"","what":"Two Field Format — two_field_format","title":"Two Field Format — two_field_format","text":"Attempt automatically convert dataset `disease|_subclass|_family` format disease ID `|nesting_disease` format.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/two_field_format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Two Field Format — two_field_format","text":"","code":"two_field_format(dataset)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/two_field_format.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Two Field Format — two_field_format","text":"dataset tidy data set `disease|_subclass|_family` columns.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/unlist_char_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Unlist a List of Character Vectors — unlist_char_list","title":"Unlist a List of Character Vectors — unlist_char_list","text":"Replacing list elements list('') element null, character vector, length zero.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/unlist_char_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unlist a List of Character Vectors — unlist_char_list","text":"","code":"unlist_char_list(x)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/unlist_char_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unlist a List of Character Vectors — unlist_char_list","text":"x list character vectors","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/vsub.html","id":null,"dir":"Reference","previous_headings":"","what":"Vectorized String Substitution — vsub","title":"Vectorized String Substitution — vsub","text":"Vectorized String Substitution","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/vsub.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vectorized String Substitution — vsub","text":"","code":"vsub(pattern, replacement, x, ...)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/vsub.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vectorized String Substitution — vsub","text":"pattern, replacement, x first three arguments sub, first allowed vector ... additional arguments pass sub","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/wrap_age_patterns.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrap Age Patterns — wrap_age_patterns","title":"Wrap Age Patterns — wrap_age_patterns","text":"Wrap list regular expressions matching age bounds disease category names, resulting regular expressions can used different purposes (extraction, removal, validation)","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/wrap_age_patterns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrap Age Patterns — wrap_age_patterns","text":"","code":"wrap_age_patterns(   patterns,   purpose = c(\"extraction\", \"removal\", \"validate\"),   prefix = \"\" )"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/wrap_age_patterns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrap Age Patterns — wrap_age_patterns","text":"patterns vector regular expressions matching age bound information disease category names purpose character string indicating purpose resulting regular expression prefix pattern match beginning string marks beginning age information","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/write_data_frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Write Data Frame — write_data_frame","title":"Write Data Frame — write_data_frame","text":"Write data frame CSV file using CSV dialect adopted IIDDA.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/write_data_frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write Data Frame — write_data_frame","text":"","code":"write_data_frame(data, filename)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/write_data_frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write Data Frame — write_data_frame","text":"data data frame write filename string giving filename","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/write_local_data_dictionaries.html","id":null,"dir":"Reference","previous_headings":"","what":"Write Local Data Dictionaries — write_local_data_dictionaries","title":"Write Local Data Dictionaries — write_local_data_dictionaries","text":"Write Local Data Dictionaries","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/write_local_data_dictionaries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write Local Data Dictionaries — write_local_data_dictionaries","text":"","code":"write_local_data_dictionaries(metadata, path)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/write_local_data_dictionaries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write Local Data Dictionaries — write_local_data_dictionaries","text":"metadata Output read_tracking_tables. path Path new JSON file.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/write_tidy_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Write Tidy Digitized Data and Metadata — write_tidy_data","title":"Write Tidy Digitized Data and Metadata — write_tidy_data","text":"Write Tidy Digitized Data Metadata","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/write_tidy_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write Tidy Digitized Data and Metadata — write_tidy_data","text":"","code":"write_tidy_data(tidy_data, metadata, tidy_dir = NULL)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/write_tidy_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write Tidy Digitized Data and Metadata — write_tidy_data","text":"tidy_data Data frame prepared data ready packaged IIDDA tidy data set. metadata Output get_tracking_metadata. tidy_dir NULL taken metadata.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/write_tidy_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write Tidy Digitized Data and Metadata — write_tidy_data","text":"file names data written","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/xlsx_diff.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare Two Excel Files — xlsx_diff","title":"Compare Two Excel Files — xlsx_diff","text":"Report differences two xlsx files.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/xlsx_diff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare Two Excel Files — xlsx_diff","text":"","code":"xlsx_diff(path_one, path_two, ...)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/xlsx_diff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare Two Excel Files — xlsx_diff","text":"path_one Path Excel file. path_two Path Excel file. ... Additional arguments pass xlsx_cells.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/xlsx_diff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare Two Excel Files — xlsx_diff","text":"Either `TRUE` two files identical, list following items. * `all_equal` : Result applying .equal data frames representing Excel file. * `in_both_but_different` : Data frame containing cells Excel files different values. * `in_one_only` : Data frame containing cells first Excel file second. * `in_two_only` : Data frame containing cells second Excel file first.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/xlsx_to_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Excel to CSV — xlsx_to_csv","title":"Excel to CSV — xlsx_to_csv","text":"Convert Excel file CSV file.","code":""},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/xlsx_to_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Excel to CSV — xlsx_to_csv","text":"","code":"xlsx_to_csv(xlsx_path, csv_path)"},{"path":"https://canmod.github.io/iidda-tools/iidda/reference/xlsx_to_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Excel to CSV — xlsx_to_csv","text":"xlsx_path Path Excel file. csv_path Path new CSV file.","code":""}]
